<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonLikeAllPhotos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>